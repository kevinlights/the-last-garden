[gd_scene load_steps=7 format=2]

[ext_resource path="res://art2d/pissenlit.png" type="Texture" id=1]
[ext_resource path="res://Characters/Plants/Pissenlit.gd" type="Script" id=2]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform float dissolution : hint_range(0,1);
uniform vec4 color : hint_color;

vec2 hash(vec2 p) {
  p = vec2( dot(p,vec2(127.1,311.7)),
        dot(p,vec2(269.5,183.3)) );
 
  return -1.0 + 2.0*fract(sin(p)*43758.5453123);
}

float gnoise(vec2 p) {
  vec2 i = floor( p );
  vec2 f = fract( p );
   
  vec2 u = f*f*(3.0-2.0*f);
 
  return mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),
           dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),
          mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),
           dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);
}

float pnoise(vec2 p,float amplitude,float frequency,float persistence, int nboctaves) {
  float a = amplitude;
  float f = frequency;
  float n = 0.0;
 
  for(int i=0;i<nboctaves;++i) {
    n = n+a*gnoise(p*f);
    f = f*2.;
    a = a*persistence;
  }

  return n;
}

void fragment(){
	vec3 n = clamp(vec3(pnoise(UV*vec2(4,1),2,4,0.2,4)*0.5+0.5),0,1);
	vec4 c = texture(TEXTURE,UV);
	
	float d=0.005;
	float dissolution_d = dissolution * (1.0);
	if(n.r < dissolution_d*1.1-d){
		c.a = 0.0;
	}

	if(dissolution > 0.0){
		c.xyz = vec3(1.0,1.0,1.0);
	}
	COLOR = vec4(c);
}"

[sub_resource type="ShaderMaterial" id=1]
shader = SubResource( 3 )
shader_param/dissolution = 0.0
shader_param/color = Color( 1, 1, 1, 1 )

[sub_resource type="Animation" id=2]
resource_name = "metamorphose"
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 1, 2 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/dissolution")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0, 0.0 ]
}

[sub_resource type="Animation" id=4]
resource_name = "meurt"
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/dissolution")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[node name="sprite" type="Sprite"]
material = SubResource( 1 )
scale = Vector2( 0.553608, 0.553608 )
z_index = 1
texture = ExtResource( 1 )
offset = Vector2( 0, 30 )
hframes = 4
frame = 2
script = ExtResource( 2 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
playback_speed = 1.5
anims/metamorphose = SubResource( 2 )
anims/meurt = SubResource( 4 )

